Match MethodDeclaration(412) to MethodDeclaration(460)
Match SimpleName: Resolution(404) to SimpleName: Resolution(452)
Match SimpleType: DateTimeZone(237) to SimpleType: DateTimeZone(269)
Match TagElement: @param(131) to TagElement: @param(151)
Match SimpleName: endTime(357) to SimpleName: endTime(401)
Match SingleVariableDeclaration(399) to SingleVariableDeclaration(447)
Match SimpleName: tx(341) to SimpleName: tx(385)
Match PrimitiveType: long(141) to PrimitiveType: long(161)
Match TagElement(92) to TagElement(108)
Match SingleVariableDeclaration(203) to SingleVariableDeclaration(231)
Match SimpleName: endTime(398) to SimpleName: endTime(446)
Match TextElement: <p/>(253) to TextElement: <p/>(285)
Match TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(39) to TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(43)
Match SimpleName: Node(198) to SimpleName: Node(226)
Match SimpleName: Node(53) to SimpleName: Node(61)
Match SimpleName: startTime(370) to SimpleName: startTime(418)
Match TextElement:         currently running transaction.(264) to TextElement:         currently running transaction.(300)
Match MethodDeclaration(90) to MethodDeclaration(102)
Match MethodDeclaration(367) to MethodDeclaration(411)
Match Javadoc(52) to Javadoc(60)
Match SimpleType: Node(391) to SimpleType: Node(394)
Match PrimitiveType: long(169) to PrimitiveType: long(193)
Match SimpleName: startTime(313) to SimpleName: startTime(353)
Match SimpleType: Transaction(61) to SimpleType: Transaction(69)
Match SimpleType: Transaction(245) to SimpleType: Transaction(277)
Match PrimitiveType: long(397) to PrimitiveType: long(445)
Match SimpleType: Transaction(323) to SimpleType: Transaction(408)
Match TextElement:  node representing the time instant when this method was called.(50) to TextElement:  node representing the time instant when this method was called.(58)
Match SimpleName: time(154) to SimpleName: time(178)
Match SingleVariableDeclaration(111) to SingleVariableDeclaration(127)
Match TagElement: @param(337) to TagElement: @param(381)
Match TextElement: configured with a default when instantiated, or both.(255) to TextElement: configured with a default when instantiated, or both.(287)
Match SimpleName: Resolution(112) to SimpleName: Resolution(128)
Match SingleVariableDeclaration(407) to SingleVariableDeclaration(455)
Match TextElement:  nodes representing all time instants in the interval, ordered chronologically.(303) to TextElement:  nodes representing all time instants in the interval, ordered chronologically.(343)
Match SingleVariableDeclaration(175) to SingleVariableDeclaration(199)
Match TagElement: @return(103) to TagElement: @return(119)
Match TextElement: The time zone of the time instants depends on the implementation, which can choose a default, require to be(254) to TextElement: The time zone of the time instants depends on the implementation, which can choose a default, require to be(286)
Match TagElement: @param(259) to TagElement: @param(295)
Match SimpleName: timeZone(110) to SimpleName: timeZone(126)
Match SimpleName: getInstant(232) to SimpleName: getInstant(264)
Match SimpleType: Transaction(145) to SimpleType: Transaction(165)
Match SimpleName: Node(271) to SimpleName: Node(438)
Match TextElement: The time zone of the time instants depends on the implementation, which can choose a default, require to be(329) to TextElement: The time zone of the time instants depends on the implementation, which can choose a default, require to be(369)
Match PrimitiveType: long(201) to PrimitiveType: long(229)
Match SimpleType: Transaction(209) to SimpleType: Transaction(201)
Match TextElement:    specific time zone.(94) to TextElement:    specific time zone.(110)
Match SimpleName: Transaction(244) to SimpleName: Transaction(276)
Match TagElement(256) to TagElement(292)
Match SimpleType: Node(231) to SimpleType: Node(263)
Match SimpleType: List(307) to SimpleType: List(306)
Match SingleVariableDeclaration(115) to SingleVariableDeclaration(131)
Match TagElement: @return(304) to TagElement: @return(344)
Match SimpleType: Resolution(241) to SimpleType: Resolution(273)
Match TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(42) to TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(46)
Match SingleVariableDeclaration(284) to SingleVariableDeclaration(320)
Match SimpleType: Transaction(282) to SimpleType: Transaction(318)
Match TextElement:  specific resolution.(222) to TextElement:  specific resolution.(254)
Match SimpleName: DateTimeZone(108) to SimpleName: DateTimeZone(124)
Match MethodDeclaration(326) to MethodDeclaration(366)
Match TextElement:  currently running transaction.(26) to TextElement:  currently running transaction.(30)
Match TextElement: <p/>(182) to TextElement: <p/>(206)
Match SingleVariableDeclaration(366) to SingleVariableDeclaration(365)
Match TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(252) to TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(284)
Match SimpleName: time(142) to SimpleName: time(162)
Match TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(17) to TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(17)
Match TextElement:  node representing a specific time instant.(135) to TextElement:  node representing a specific time instant.(155)
Match MethodDeclaration(38) to MethodDeclaration(42)
Match SimpleName: time(186) to SimpleName: time(214)
Match TagElement: @param(340) to TagElement: @param(384)
Match TextElement: <p/>(150) to TextElement: <p/>(170)
Match SimpleName: getInstant(140) to SimpleName: getInstant(160)
Match TagElement: @param(223) to TagElement: @param(255)
Match TagElement: @return(228) to TagElement: @return(260)
Match SimpleName: Transaction(408) to SimpleName: Transaction(456)
Match SimpleName: tx(36) to SimpleName: tx(40)
Match SimpleName: tx(382) to SimpleName: tx(430)
Match SimpleName: tx(118) to SimpleName: tx(134)
Match TagElement(128) to TagElement(148)
Match SimpleType: DateTimeZone(109) to SimpleType: DateTimeZone(125)
Match SimpleName: tx(283) to SimpleName: tx(319)
Match TextElement:  UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(292) to TextElement:  UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(332)
Match SimpleName: resolution(361) to SimpleName: resolution(405)
Match SingleVariableDeclaration(280) to SingleVariableDeclaration(316)
Match TextElement:  specific time zone.(158) to TextElement:  specific time zone.(182)
Match SingleVariableDeclaration(325) to SingleVariableDeclaration(410)
Match SingleVariableDeclaration(321) to SingleVariableDeclaration(361)
Match TagElement: @param(378) to TagElement: @param(426)
Match TextElement: <p/>(287) to TextElement: <p/>(323)
Match SimpleName: resolution(84) to SimpleName: resolution(96)
Match TagElement: @param(46) to TagElement: @param(54)
Match TextElement:  nodes representing all time instants in the interval, ordered chronologically.(344) to TextElement:  nodes representing all time instants in the interval, ordered chronologically.(388)
Match TextElement:  specific resolution.(190) to TextElement:  specific resolution.(218)
Match SimpleName: DateTimeZone(172) to SimpleName: DateTimeZone(196)
Match SingleVariableDeclaration(362) to SingleVariableDeclaration(406)
Match TagElement: @param(293) to TagElement: @param(333)
Match TextElement:   specific time zone.(298) to TextElement:   specific time zone.(338)
Match TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(126) to TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(142)
Match SimpleName: Node(138) to SimpleName: Node(158)
Match TagElement(43) to TagElement(51)
Match TagElement: @param(343) to TagElement: @param(387)
Match Modifier: public(15) to Modifier: public(15)
Match TextElement:  node representing the time instant when this method was called.(76) to TextElement:  node representing the time instant when this method was called.(88)
Match SimpleName: time(234) to SimpleName: time(266)
Match SimpleName: endTime(335) to SimpleName: endTime(379)
Match TextElement: API for representing time as a tree (also called GraphAware TimeTree). Provides methods for creating and retrieving(10) to TextElement: API for representing time as a tree (also called GraphAware TimeTree). Provides methods for creating and retrieving(10)
Match PrimitiveType: long(356) to PrimitiveType: long(400)
Match SingleVariableDeclaration(403) to SingleVariableDeclaration(451)
Match SimpleName: getInstants(352) to SimpleName: getInstants(396)
Match SingleVariableDeclaration(59) to SingleVariableDeclaration(67)
Match SimpleType: List(270) to SimpleType: List(437)
Match SimpleType: Node(199) to SimpleType: Node(227)
Match TextElement:    specific time zone.(219) to TextElement:    specific time zone.(251)
Match TagElement: @param(49) to TagElement: @param(57)
Match TextElement:          currently running transaction.(225) to TextElement:          currently running transaction.(257)
Match SimpleType: Resolution(360) to SimpleType: Resolution(404)
Match TagElement: @return(386) to TagElement: @return(434)
Match SimpleName: tx(263) to SimpleName: tx(299)
Match SimpleName: time(215) to SimpleName: time(247)
Match TextElement:    currently running transaction.(133) to TextElement:    currently running transaction.(153)
Match TextElement:          currently running transaction.(342) to TextElement:          currently running transaction.(386)
Match SingleVariableDeclaration(179) to SingleVariableDeclaration(239)
Match SimpleName: resolution(406) to SimpleName: resolution(454)
Match TextElement:  specific resolution.(339) to TextElement:  specific resolution.(383)
Match SingleVariableDeclaration(63) to SingleVariableDeclaration(71)
Match SimpleName: tx(365) to SimpleName: tx(364)
Match SimpleName: tx(210) to SimpleName: tx(202)
Match SimpleName: startTime(354) to SimpleName: startTime(398)
Match SimpleName: List(347) to SimpleName: List(346)
Match SimpleName: resolution(242) to SimpleName: resolution(274)
Match TextElement:  specific resolution.(97) to TextElement:  specific resolution.(113)
Match TextElement:  UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(258) to TextElement:  UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(294)
Match Javadoc(78) to Javadoc(90)
Match TextElement:    specific time zone.(377) to TextElement:    specific time zone.(425)
Match SimpleName: tx(88) to SimpleName: tx(100)
Match TagElement: @param(375) to TagElement: @param(423)
Match TextElement: configured with a default when instantiated, or both.(184) to TextElement: configured with a default when instantiated, or both.(208)
Match SimpleName: startTime(332) to SimpleName: startTime(376)
Match SimpleName: timeZone(174) to SimpleName: timeZone(198)
Match TagElement: @param(226) to TagElement: @param(258)
Match TextElement:     UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(336) to TextElement:     UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(380)
Match TextElement: nodes that represent instances of time, making sure that a tree of time is maintained with each created node.(11) to TextElement: nodes that represent instances of time, making sure that a tree of time is maintained with each created node.(11)
Match ParameterizedType: List<Node>(310) to ParameterizedType: List<Node>(309)
Match TextElement:  nodes representing all time instants in the interval, ordered chronologically.(266) to TextElement:  nodes representing all time instants in the interval, ordered chronologically.(302)
Match SimpleName: tx(192) to SimpleName: tx(220)
Match SimpleName: getInstants(393) to SimpleName: getInstants(441)
Match TagElement: @param(302) to TagElement: @param(342)
Match TagElement(13) to TagElement(13)
Match TagElement(69) to TagElement(81)
Match Javadoc(346) to Javadoc(390)
Match ParameterizedType: List<Node>(351) to ParameterizedType: List<Node>(350)
Match TagElement: @param(159) to TagElement: @param(183)
Match TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(124) to TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(140)
Match SimpleName: resolution(221) to SimpleName: resolution(253)
Match TextElement:  node representing a specific time instant.(227) to TextElement:  node representing a specific time instant.(259)
Match TextElement: <p/>(40) to TextElement: <p/>(44)
Match SingleVariableDeclaration(89) to SingleVariableDeclaration(101)
Match TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(22) to TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(22)
Match SimpleName: getNow(55) to SimpleName: getNow(63)
Match TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(183) to TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(207)
Match SimpleName: Transaction(363) to SimpleName: Transaction(362)
Match TextElement:  UTC time in ms from 1/1/1970.(130) to TextElement:  UTC time in ms from 1/1/1970.(150)
Match TextElement:          currently running transaction.(74) to TextElement:          currently running transaction.(86)
Match TagElement(331) to TagElement(375)
Match ImportDeclaration(3) to ImportDeclaration(3)
Match TagElement: @return(345) to TagElement: @return(389)
Match SimpleName: time(202) to SimpleName: time(230)
Match QualifiedName: java.util.List(8) to QualifiedName: java.util.List(8)
Match TagElement: @param(27) to TagElement: @param(31)
Match TextElement: <p/>(18) to TextElement: <p/>(18)
Match SingleVariableDeclaration(396) to SingleVariableDeclaration(444)
Match SimpleName: endTime(279) to SimpleName: endTime(315)
Match SimpleType: Transaction(364) to SimpleType: Transaction(363)
Match PrimitiveType: long(315) to PrimitiveType: long(355)
Match TagElement(290) to TagElement(330)
Match SimpleType: Resolution(83) to SimpleType: Resolution(95)
Match TextElement: <p/>(66) to TextElement: <p/>(74)
Match TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(368) to TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(412)
Match SimpleName: timeZone(218) to SimpleName: timeZone(250)
Match TagElement: @param(75) to TagElement: @param(87)
Match TagElement: @param(101) to TagElement: @param(117)
Match SimpleName: tx(160) to SimpleName: tx(184)
Match ParameterizedType: List<Node>(273) to ParameterizedType: List<Node>(440)
Match SimpleName: Transaction(322) to SimpleName: Transaction(407)
Match SimpleType: Node(272) to SimpleType: Node(439)
Match SimpleName: Transaction(34) to SimpleName: Transaction(38)
Match TextElement:    UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(261) to TextElement:    UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(297)
Match TagElement: @return(196) to TagElement: @return(224)
Match ParameterizedType: List<Node>(392) to ParameterizedType: List<Node>(395)
Match SingleVariableDeclaration(85) to SingleVariableDeclaration(97)
Match Javadoc(268) to Javadoc(304)
Match ImportDeclaration(7) to ImportDeclaration(7)
Match SimpleName: timeZone(320) to SimpleName: timeZone(360)
Match TagElement: @param(265) to TagElement: @param(301)
Match QualifiedName: org.neo4j.graphdb.Node(4) to QualifiedName: org.neo4j.graphdb.Node(4)
Match PrimitiveType: long(394) to PrimitiveType: long(442)
Match TagElement: @param(334) to TagElement: @param(378)
Match TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(19) to TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(19)
Match SimpleName: tx(178) to SimpleName: tx(238)
Match TagElement: @param(299) to TagElement: @param(339)
Match SingleVariableDeclaration(143) to SingleVariableDeclaration(163)
Match SimpleName: getInstant(168) to SimpleName: getInstant(192)
Match TagElement: @return(51) to TagElement: @return(59)
Match SimpleName: timeZone(297) to SimpleName: timeZone(337)
Match TextElement:  specific resolution.(380) to TextElement:  specific resolution.(428)
Match SingleVariableDeclaration(358) to SingleVariableDeclaration(402)
Match SimpleName: time(170) to SimpleName: time(194)
Match TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(20) to TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(20)
Match SimpleName: Node(349) to SimpleName: Node(348)
Match QualifiedName: com.graphaware.module.timetree(0) to QualifiedName: com.graphaware.module.timetree(0)
Match TextElement: <p/>(328) to TextElement: <p/>(368)
Match SimpleName: endTime(294) to SimpleName: endTime(334)
Match SimpleType: Node(32) to SimpleType: Node(36)
Match TagElement: @return(164) to TagElement: @return(188)
Match TextElement:          currently running transaction.(383) to TextElement:          currently running transaction.(431)
Match TextElement:  nodes representing all time instants in the interval, ordered chronologically.(385) to TextElement:  nodes representing all time instants in the interval, ordered chronologically.(433)
Match SimpleType: Resolution(405) to SimpleType: Resolution(453)
Match PrimitiveType: long(275) to PrimitiveType: long(311)
Match SimpleType: Resolution(205) to SimpleType: Resolution(233)
Match SimpleType: Node(106) to SimpleType: Node(122)
Match SingleVariableDeclaration(211) to SingleVariableDeclaration(203)
Match SimpleType: Transaction(35) to SimpleType: Transaction(39)
Match TextElement: configured with a default when instantiated, or both.(23) to TextElement: configured with a default when instantiated, or both.(23)
Match SimpleName: Node(31) to SimpleName: Node(35)
Match SimpleName: tx(73) to SimpleName: tx(85)
Match SimpleType: List(348) to SimpleType: List(347)
Match SimpleName: getInstants(274) to SimpleName: getInstants(310)
Match TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(41) to TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(45)
Match TagElement: @param(72) to TagElement: @param(84)
Match SimpleName: timeZone(157) to SimpleName: timeZone(181)
Match TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(289) to TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(325)
Match TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(121) to TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(137)
Match SimpleType: Node(139) to SimpleType: Node(159)
Match TagElement: @param(95) to TagElement: @param(111)
Match TagElement: @param(372) to TagElement: @param(420)
Match TextElement:  node representing the time instant when this method was called.(102) to TextElement:  node representing the time instant when this method was called.(118)
Match TagElement(24) to TagElement(28)
Match SimpleName: timeZone(44) to SimpleName: timeZone(52)
Match SingleVariableDeclaration(277) to SingleVariableDeclaration(313)
Match TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(152) to TextElement: which can choose a sensible default, require to be configured with a default when instantiated, or both.(172)
Match TagElement: @param(194) to TagElement: @param(222)
Match SimpleName: endTime(260) to SimpleName: endTime(296)
Match TextElement:        UTC time in ms from 1/1/1970.(187) to TextElement:        UTC time in ms from 1/1/1970.(215)
Match SimpleType: Node(80) to SimpleType: Node(92)
Match TagElement: @param(384) to TagElement: @param(432)
Match SimpleName: startTime(276) to SimpleName: startTime(312)
Match TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(151) to TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(171)
Match TagElement: @param(381) to TagElement: @param(429)
Match SimpleName: Transaction(176) to SimpleName: Transaction(236)
Match TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(181) to TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(205)
Match TextElement:    UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(295) to TextElement:    UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(335)
Match SimpleName: resolution(114) to SimpleName: resolution(130)
Match MethodDeclaration(148) to MethodDeclaration(168)
Match SimpleType: Transaction(87) to SimpleType: Transaction(99)
Match SimpleName: tx(324) to SimpleName: tx(409)
Match TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(286) to TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(322)
Match SimpleName: Transaction(208) to SimpleName: Transaction(200)
Match TextElement:        UTC time in ms from 1/1/1970.(216) to TextElement:        UTC time in ms from 1/1/1970.(248)
Match SimpleName: resolution(96) to SimpleName: resolution(112)
Match TextElement:          currently running transaction.(100) to TextElement:          currently running transaction.(116)
Match TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(213) to TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(241)
Match SimpleName: tx(62) to SimpleName: tx(70)
Match PackageDeclaration(1) to PackageDeclaration(1)
Match TagElement(153) to TagElement(177)
Match TextElement:         currently running transaction.(301) to TextElement:         currently running transaction.(341)
Match TextElement: <p/>(125) to TextElement: <p/>(141)
Match SimpleName: DateTimeZone(400) to SimpleName: DateTimeZone(448)
Match SimpleName: resolution(70) to SimpleName: resolution(82)
Match SimpleName: endTime(316) to SimpleName: endTime(356)
Match SimpleType: List(389) to SimpleType: List(392)
Match TagElement: @return(267) to TagElement: @return(303)
Match TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(65) to TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(73)
Match SimpleType: Resolution(113) to SimpleType: Resolution(129)
Match TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(67) to TextElement: The time zone of the time instant depends on the implementation, which can choose a default, require to be(75)
Match TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(327) to TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(367)
Match TagElement: @return(136) to TagElement: @return(156)
Match SimpleName: time(129) to SimpleName: time(149)
Match SimpleName: Resolution(359) to SimpleName: Resolution(403)
Match SimpleName: Node(166) to SimpleName: Node(190)
Match SimpleName: DateTimeZone(318) to SimpleName: DateTimeZone(358)
Match SimpleName: Resolution(240) to SimpleName: Resolution(272)
Match SimpleName: getInstants(311) to SimpleName: getInstants(351)
Match TagElement: @param(220) to TagElement: @param(252)
Match SingleVariableDeclaration(411) to SingleVariableDeclaration(459)
Match QualifiedName: org.neo4j.graphdb.Transaction(6) to QualifiedName: org.neo4j.graphdb.Transaction(6)
Match SingleVariableDeclaration(119) to SingleVariableDeclaration(135)
Match SimpleName: tx(410) to SimpleName: tx(458)
Match SimpleType: Node(167) to SimpleType: Node(191)
Match SimpleName: tx(25) to SimpleName: tx(29)
Match SingleVariableDeclaration(239) to SingleVariableDeclaration(271)
Match SimpleName: Transaction(144) to SimpleName: Transaction(164)
Match TextElement:   UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(371) to TextElement:   UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(419)
Match TextElement:      UTC time in ms from 1/1/1970.(155) to TextElement:      UTC time in ms from 1/1/1970.(179)
Match SimpleType: DateTimeZone(319) to SimpleType: DateTimeZone(359)
Match SimpleName: timeZone(402) to SimpleName: timeZone(450)
Match TextElement: configured with a default when instantiated, or both.(127) to TextElement: configured with a default when instantiated, or both.(143)
Match TextElement: <p/>(250) to TextElement: <p/>(282)
Match PrimitiveType: long(278) to PrimitiveType: long(314)
Match SingleVariableDeclaration(317) to SingleVariableDeclaration(357)
Match TagElement: @param(296) to TagElement: @param(336)
Match TextElement:        currently running transaction.(48) to TextElement:        currently running transaction.(56)
Match TextElement: configured with a default when instantiated, or both.(330) to TextElement: configured with a default when instantiated, or both.(370)
Match SimpleType: DateTimeZone(57) to SimpleType: DateTimeZone(65)
Match TagElement: @param(134) to TagElement: @param(154)
Match Javadoc(165) to Javadoc(189)
Match SimpleName: endTime(373) to SimpleName: endTime(421)
Match SimpleName: List(306) to SimpleName: List(305)
Match SimpleName: TimeTree(16) to SimpleName: TimeTree(16)
Match SimpleName: resolution(379) to SimpleName: resolution(427)
Match SimpleName: startTime(257) to SimpleName: startTime(293)
Match SimpleName: tx(132) to SimpleName: tx(152)
Match MethodDeclaration(180) to MethodDeclaration(204)
Match TagElement: @param(188) to TagElement: @param(216)
Match Javadoc(387) to Javadoc(435)
Match SingleVariableDeclaration(247) to SingleVariableDeclaration(279)
Match TextElement:  node representing a specific time instant.(163) to TextElement:  node representing a specific time instant.(187)
Match SimpleName: DateTimeZone(56) to SimpleName: DateTimeZone(64)
Match TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(249) to TextElement: Get nodes representing all time instants in the specified range (inclusive). The ones that don't exist will be created.(281)
Match QualifiedName: org.joda.time.DateTimeZone(2) to QualifiedName: org.joda.time.DateTimeZone(2)
Match TextElement:  node representing a specific time instant.(195) to TextElement:  node representing a specific time instant.(223)
Match TagElement(185) to TagElement(213)
Match Javadoc(305) to Javadoc(345)
Match TagElement: @param(191) to TagElement: @param(219)
Match SimpleName: Transaction(60) to SimpleName: Transaction(68)
Match ImportDeclaration(5) to ImportDeclaration(5)
Match MethodDeclaration(212) to MethodDeclaration(240)
Match SimpleName: Transaction(116) to SimpleName: Transaction(132)
Match SimpleName: getInstant(200) to SimpleName: getInstant(228)
Match TagElement: @param(156) to TagElement: @param(180)
Match SimpleName: tx(146) to SimpleName: tx(166)
Match SingleVariableDeclaration(355) to SingleVariableDeclaration(399)
Match TagElement: @param(262) to TagElement: @param(298)
Match SimpleType: Transaction(117) to SimpleType: Transaction(133)
Match SimpleName: startTime(395) to SimpleName: startTime(443)
Match SimpleName: Node(105) to SimpleName: Node(121)
Match SimpleName: tx(99) to SimpleName: tx(115)
Match TagElement(214) to TagElement(246)
Match SimpleType: Node(54) to SimpleType: Node(62)
Match TextElement: The resolution of the time instants (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(288) to TextElement: The resolution of the time instants (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(324)
Match ImportDeclaration(9) to ImportDeclaration(9)
Match TextElement: There is no support for changes or deletes.(12) to TextElement: There is no support for changes or deletes.(12)
Match Javadoc(229) to Javadoc(261)
Match TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(91) to TextElement: Get a node representing this time instant. If one doesn't exist, it will be created.(103)
Match TextElement:   UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(333) to TextElement:   UTC time in ms from 1/1/1970 of the start of the interval (inclusive).(377)
Match Javadoc(104) to Javadoc(120)
Match SimpleName: Resolution(204) to SimpleName: Resolution(232)
Match SingleVariableDeclaration(37) to SingleVariableDeclaration(41)
Match TextElement:  specific time zone.(45) to TextElement:  specific time zone.(53)
Match TextElement: <p/>(21) to TextElement: <p/>(21)
Match SingleVariableDeclaration(314) to SingleVariableDeclaration(354)
Match TextElement:     UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(374) to TextElement:     UTC time in ms from 1/1/1970 of the end of the interval (inclusive).(422)
Match SimpleName: timeZone(238) to SimpleName: timeZone(270)
Match SingleVariableDeclaration(171) to SingleVariableDeclaration(195)
Match Javadoc(197) to Javadoc(225)
Match SimpleType: DateTimeZone(173) to SimpleType: DateTimeZone(197)
Match SimpleName: resolution(189) to SimpleName: resolution(217)
Match TextElement:          currently running transaction.(193) to TextElement:          currently running transaction.(221)
Match Javadoc(30) to Javadoc(34)
Match SimpleName: Node(390) to SimpleName: Node(393)
Match TagElement: @param(217) to TagElement: @param(249)
Match MethodDeclaration(64) to MethodDeclaration(72)
Match SimpleName: tx(300) to SimpleName: tx(340)
Match SimpleName: tx(246) to SimpleName: tx(278)
Match SimpleName: Node(308) to SimpleName: Node(307)
Match SimpleName: List(269) to SimpleName: List(436)
Match TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(123) to TextElement: The resolution of the time instant (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(139)
Match TextElement:  node representing the time instant when this method was called.(28) to TextElement:  node representing the time instant when this method was called.(32)
Match CompilationUnit(414) to CompilationUnit(469)
Match SimpleName: timeZone(58) to SimpleName: timeZone(66)
Match SimpleType: Node(350) to SimpleType: Node(349)
Match TagElement: @return(77) to TagElement: @return(89)
Match SingleVariableDeclaration(147) to SingleVariableDeclaration(167)
Match SimpleName: Resolution(82) to SimpleName: Resolution(94)
Match TagElement(369) to TagElement(417)
Match SimpleType: Transaction(409) to SimpleType: Transaction(457)
Match SimpleName: getNow(81) to SimpleName: getNow(93)
Match TextElement: The resolution of the time instants (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(251) to TextElement: The resolution of the time instants (i.e., whether it is a day, hour, minute, etc.) depends on the implementation,(283)
Match TagElement: @return(29) to TagElement: @return(33)
Match PrimitiveType: long(233) to PrimitiveType: long(265)
Match TagElement: @param(98) to TagElement: @param(114)
Match Javadoc(137) to Javadoc(157)
Match TagElement: @param(162) to TagElement: @param(186)
Match PrimitiveType: long(312) to PrimitiveType: long(352)
Match SingleVariableDeclaration(235) to SingleVariableDeclaration(267)
Match SimpleName: timeZone(93) to SimpleName: timeZone(109)
Match SimpleName: timeZone(376) to SimpleName: timeZone(424)
Match SimpleName: resolution(338) to SimpleName: resolution(382)
Match MethodDeclaration(248) to MethodDeclaration(280)
Match TextElement: <p/>(122) to TextElement: <p/>(138)
Match PrimitiveType: long(353) to PrimitiveType: long(397)
Match TextElement: configured with a default when instantiated, or both.(68) to TextElement: configured with a default when instantiated, or both.(76)
Match SimpleName: Transaction(281) to SimpleName: Transaction(317)
Match SimpleName: resolution(206) to SimpleName: resolution(234)
Match SimpleName: tx(224) to SimpleName: tx(256)
Match SimpleName: List(388) to SimpleName: List(391)
Match Javadoc(14) to Javadoc(14)
Match SimpleName: DateTimeZone(236) to SimpleName: DateTimeZone(268)
Match TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(149) to TextElement: Get a node representing a specific time instant. If one doesn't exist, it will be created.(169)
Match SimpleName: startTime(291) to SimpleName: startTime(331)
Match SingleVariableDeclaration(207) to SingleVariableDeclaration(235)
Match SimpleName: Node(79) to SimpleName: Node(91)
Match TypeDeclaration(413) to TypeDeclaration(468)
Match SimpleName: Node(230) to SimpleName: Node(262)
Match SimpleName: getNow(33) to SimpleName: getNow(37)
Match TextElement:        currently running transaction.(161) to TextElement:        currently running transaction.(185)
Match SimpleName: getNow(107) to SimpleName: getNow(123)
Match SimpleName: Transaction(86) to SimpleName: Transaction(98)
Match TextElement:  specific resolution.(71) to TextElement:  specific resolution.(83)
Match MethodDeclaration(285) to MethodDeclaration(321)
Match SingleVariableDeclaration(243) to SingleVariableDeclaration(275)
Match MethodDeclaration(120) to MethodDeclaration(136)
Match SimpleName: tx(47) to SimpleName: tx(55)
Match SimpleType: Node(309) to SimpleType: Node(308)
Match SimpleType: DateTimeZone(401) to SimpleType: DateTimeZone(449)
Match SimpleType: Transaction(177) to SimpleType: Transaction(237)
Insert MethodDeclaration(467) into TypeDeclaration(468) at 15
Move SingleVariableDeclaration(211) into MethodDeclaration(204) at 5 on Method getInstant
Move SingleVariableDeclaration(179) into MethodDeclaration(240) at 5 on Method getInstant
Move ParameterizedType: List<Node>(310) into MethodDeclaration(321) at 1 on Method getInstants
Move ParameterizedType: List<Node>(351) into MethodDeclaration(366) at 1 on Method getInstants
Move SingleVariableDeclaration(366) into MethodDeclaration(366) at 6 on Method getInstants
Move ParameterizedType: List<Node>(392) into MethodDeclaration(411) at 1 on Method getInstants
Move SingleVariableDeclaration(325) into MethodDeclaration(411) at 6 on Method getInstants
Move ParameterizedType: List<Node>(273) into MethodDeclaration(460) at 1 on Method getInstants
Insert Javadoc(464) into MethodDeclaration(467) at 0 on Method invalidateCaches
Insert PrimitiveType: void(465) into MethodDeclaration(467) at 1 on Method invalidateCaches
Insert SimpleName: invalidateCaches(466) into MethodDeclaration(467) at 2 on Method invalidateCaches
Insert TagElement(463) into Javadoc(464) at 0 on Method invalidateCaches
Insert TextElement: <p>(24) into TagElement(28) at 7 on Method getNow
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(25) into TagElement(28) at 8 on Method getNow
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(26) into TagElement(28) at 9 on Method getNow
Insert TextElement: </p>(27) into TagElement(28) at 10 on Method getNow
Insert TextElement: <p>(47) into TagElement(51) at 4 on Method getNow
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(48) into TagElement(51) at 5 on Method getNow
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(49) into TagElement(51) at 6 on Method getNow
Insert TextElement: </p>(50) into TagElement(51) at 7 on Method getNow
Insert TextElement: <p>(77) into TagElement(81) at 4 on Method getNow
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(78) into TagElement(81) at 5 on Method getNow
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(79) into TagElement(81) at 6 on Method getNow
Insert TextElement: </p>(80) into TagElement(81) at 7 on Method getNow
Insert TextElement: <p>(104) into TagElement(108) at 1 on Method getNow
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(105) into TagElement(108) at 2 on Method getNow
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(106) into TagElement(108) at 3 on Method getNow
Insert TextElement: </p>(107) into TagElement(108) at 4 on Method getNow
Insert TextElement: <p>(144) into TagElement(148) at 7 on Method getInstant
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(145) into TagElement(148) at 8 on Method getInstant
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(146) into TagElement(148) at 9 on Method getInstant
Insert TextElement: </p>(147) into TagElement(148) at 10 on Method getInstant
Insert TextElement: <p>(173) into TagElement(177) at 4 on Method getInstant
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(174) into TagElement(177) at 5 on Method getInstant
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(175) into TagElement(177) at 6 on Method getInstant
Insert TextElement: </p>(176) into TagElement(177) at 7 on Method getInstant
Insert TextElement: <p>(209) into TagElement(213) at 4 on Method getInstant
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(210) into TagElement(213) at 5 on Method getInstant
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(211) into TagElement(213) at 6 on Method getInstant
Insert TextElement: </p>(212) into TagElement(213) at 7 on Method getInstant
Insert TextElement: <p>(242) into TagElement(246) at 1 on Method getInstant
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(243) into TagElement(246) at 2 on Method getInstant
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(244) into TagElement(246) at 3 on Method getInstant
Insert TextElement: </p>(245) into TagElement(246) at 4 on Method getInstant
Insert TextElement: <p>(288) into TagElement(292) at 7 on Method getInstants
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(289) into TagElement(292) at 8 on Method getInstants
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(290) into TagElement(292) at 9 on Method getInstants
Insert TextElement: </p>(291) into TagElement(292) at 10 on Method getInstants
Insert TextElement: <p>(326) into TagElement(330) at 4 on Method getInstants
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(327) into TagElement(330) at 5 on Method getInstants
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(328) into TagElement(330) at 6 on Method getInstants
Insert TextElement: </p>(329) into TagElement(330) at 7 on Method getInstants
Insert TextElement: <p>(371) into TagElement(375) at 4 on Method getInstants
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(372) into TagElement(375) at 5 on Method getInstants
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(373) into TagElement(375) at 6 on Method getInstants
Insert TextElement: </p>(374) into TagElement(375) at 7 on Method getInstants
Insert TextElement: <p>(413) into TagElement(417) at 1 on Method getInstants
Insert TextElement: Note that this may throw an org.neo4j.graphdb.NotFoundException if the root of the single time tree has been deleted.(414) into TagElement(417) at 2 on Method getInstants
Insert TextElement: If this occurs, call invalidateCaches() and retry this method.(415) into TagElement(417) at 3 on Method getInstants
Insert TextElement: </p>(416) into TagElement(417) at 4 on Method getInstants
Insert TextElement: Invalidate time tree root caching.(461) into TagElement(463) at 0 on Method invalidateCaches
Insert TextElement: Use when the root node of the time tree has been deleted and a NotFoundException is thrown to reset the time tree.(462) into TagElement(463) at 1 on Method invalidateCaches